@model Adrack.Web.ContentManagement.Models.Lead.Reports.BuyerReportModel

@{
    Html.AddPageTitle("Report Buyers By Hour");

    Html.AppendPageScript(PageLayoutPosition.Body, string.Format("~/Scripts/plugins/select2.min.js").ToLowerInvariant());
}

<script src="~/Scripts/core/library/jquery_ui/core.min.js"></script>
<script src="~/Scripts/core/library/jquery_ui/interactions.min.js"></script>
<script src="~/Scripts/core/library/jquery_ui/effects.min.js"></script>
<script src="~/Scripts/plugins/forms/selects/bootstrap_multiselect.js"></script>
<script src="~/Scripts/plugins/trees/fancytree_all.min.js"></script>
<script src="~/Scripts/plugins/trees/fancytree_childcounter.js"></script>

<script src="~/Scripts/plugins/ui/moment/moment.min.js"></script>
<script src="~/Scripts/plugins/pickers/daterangepicker.js"></script>
<script src="~/Scripts/plugins/pickers/anytime.min.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.date.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.time.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/legacy.js"></script>

<script>
    function sortTable(columnIndex, order){
        var rows = $('#ReportBuyersByHour tbody tr').get();

        rows.sort(function (a, b) {
            if ($(a).children('td').eq(0).text() == "Total" || $(b).children('td').eq(0).text() == "Total") {
                return 0;
            }

            var x = parseFloat($(a).children('td').eq(columnIndex).text().replace("$", ""));
            var y = parseFloat($(b).children('td').eq(columnIndex).text().replace("$", ""));

            if (order == "asc")
                return x === y ? 0 : (x > y ? 1 : -1);
            else if (order == "desc")
                return x === y ? 0 : (x < y ? 1 : -1);
        });

        $("#ReportBuyersByHour tbody").find("tr").remove();
        $.each(rows, function(index, row) {
            $('#ReportBuyersByHour').children('tbody').append(row);
        });
    }

    function initReportBuyersByHour() {
        $("#ReportBuyersByHour").fancytree({
            extensions: ["table", "dnd"],
            checkbox: false,
            table: {
                indentation: 20,      // indent 20px per node level
                nodeColumnIdx: 0     // render the node title into the 2nd column
            },
            source: [],
            lazyLoad: function (event, data) {
                data.result = { url: "ajax-sub2.json" }
            },
            renderColumns: function (event, data) {
                var node = data.node,
                $tdList = $(node.tr).find(">td");

                $tdList.eq(0).css('text-align', 'left');

                if (!node.folder) {

                }

                //$tdList.eq(0).html(node.title);
                $tdList.eq(1).addClass('text-center').text(node.data.TotalLeads1);
                $tdList.eq(2).addClass('text-center').text(node.data.SoldLeads1);

                $tdList.eq(3).addClass('text-center').text(node.data.TotalLeads2);
                $tdList.eq(4).addClass('text-center').text(node.data.SoldLeads2);

                $tdList.eq(5).addClass('text-center').text(node.data.TotalLeads3);
                $tdList.eq(6).addClass('text-center').text(node.data.SoldLeads3);

                if (node.title == 'Total') {
                    for (var i = 0; i < $tdList.length; i++) {
                        $tdList.eq(i).html('<b>' + $tdList.eq(i).text() + '</b>');
                    }
                }

                //$(".select-search").off("select2:select").on("select2:select", function (e) { $(this).parent().data('value', e.params.data.id); console.log(e); });
            },
            activate: function (event, data) {
            },
            select: function (event, data) {
            },
            dnd: {
                preventVoidMoves: true, // Prevent dropping nodes 'before self', etc.
                preventRecursiveMoves: true, // Prevent dropping nodes on own descendants
                autoExpandMS: 400,
                draggable: {
                    //zIndex: 1000,
                    // appendTo: "body",
                    // helper: "clone",
                    scroll: false,
                    revert: "invalid"
                },
                dragStart: function (node, data) {
                    if (data.originalEvent.shiftKey) {
                        console.log("dragStart with SHIFT");
                    }
                    return true;
                },
                dragEnter: function (node, data) {
                    return true;
                },
                dragDrop: function (node, data) {
                    if (!data.otherNode) {
                        // It's a non-tree draggable
                        var title = $(data.draggable.element).text() + " (" + (count)++ + ")";
                        node.addNode({ title: title }, data.hitMode);
                        alert('dd');
                        return;
                    }
                    data.otherNode.moveTo(node, data.hitMode);
                    $(node.tr).data('folder', true);
                }
            }
        });
    }

    function loadTree(source) {
        var tree = $('#ReportBuyersByHour').fancytree('getTree');
        tree.reload(source);
    }

    function loadReport(csv) {
        if (csv == undefined) csv = false;

        var data = [];

        $('.campaign-field').each(function () {
            var field = $(this).text();
            var index = $(this).data('index');
            var validator = $(this).data('validator');
            var value1 = $('#filter-value1-' + index).val();
            var value2 = $('#filter-value2-' + index).val();
            var exclude = $('#filter-exclude-' + index).is(':checked');
            var condition = $('#filter-condition-' + index).val();

            if (condition == undefined) condition = 0;

            data.push({ field: field, value1: value1, value2: value2, exclude: exclude, validator: validator, condition: condition });
        });

        var buyerChannels = $('#buyerChannels').val();
        var buyerChannelIds = '0';
        if (buyerChannels != undefined) {
            if (buyerChannels.length > 0)
                buyerChannelIds += ',';
            for (var i = 0; i < buyerChannels.length; i++) {
                buyerChannelIds += buyerChannels[i];
                if (i < buyerChannels.length - 1)
                    buyerChannelIds += ',';
            }
        }

        var datajson = JSON.stringify(data);

        if (!csv) {
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: '@Model.BaseUrl' + '/management/report/GetReportBuyersByHour',
                data: { data: datajson, buyerChannels: buyerChannelIds, campaigns: $('#campaigns').val(), reportDate1: $('#reportDate1').val(), reportDate2: $('#reportDate2').val(), reportDate3: $('#reportDate3').val(), price1: 0, price2: 0 },
                success: function (data) {
                   $("#ReportBuyersByHour tbody").find("tr").remove();
                    var rows = '';

                    for (var i = 0; i < data.length; i++) {
                        if (data[i].title != 'Total') {
                            rows += '<tr><td>' + data[i].title + '</td>';
                            rows += '<td>' + data[i].TotalLeads1 + '</td>';
                            rows += '<td>' + data[i].SoldLeads1 + '</td>';
                            rows += '<td>' + data[i].TotalLeads2 + '</td>';
                            rows += '<td>' + data[i].SoldLeads2 + '</td>';
                            rows += '<td>' + data[i].TotalLeads3 + '</td>';
                            rows += '<td>' + data[i].SoldLeads3 + '</td>';
                            rows += '</tr>';
                        }
                        else {
                            rows += '<tr><td><b>' + data[i].title + '</b></td>';
                            rows += '<td><b>' + data[i].TotalLeads1 + '</b></td>';
                            rows += '<td><b>' + data[i].SoldLeads1 + '</b></td>';
                            rows += '<td><b>' + data[i].TotalLeads2 + '</b></td>';
                            rows += '<td><b>' + data[i].SoldLeads2 + '</b></td>';
                            rows += '<td><b>' + data[i].TotalLeads3 + '</b></td>';
                            rows += '<td><b>' + data[i].SoldLeads3 + '</b></td>';
                            rows += '</tr>';
                        }
                    }

                    $("#ReportBuyersByHour tbody").append(rows);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
        else {
            location.href = '@Model.BaseUrl' + '/management/report/GetReportBuyersByHour' +
                '?data=' + datajson + '&buyerChannels=' + buyerChannelIds + '&campaigns=' + $('#campaigns').val() + '&reportDate1=' + $('#reportDate1').val() + '&reportDate2=' + $('#reportDate2').val() + '&reportDate3=' + $('#reportDate3').val() + '&price1=0&price2=0&csv=true';
        }
    }

    $(document).ready(function () {

       $('#reportDate1').pickadate({
            formatSubmit: 'mm/dd/yyyy',
            format: 'mm/dd/yyyy',
            onSet: function (context) {
                if (this.get().length > 0)
                $('#date1-title').text(this.get());
            },
            onStart: function ()
            {
                var date = new Date();
                this.set('select', date);
            }
        });

        $('#reportDate2').pickadate({
            formatSubmit: 'mm/dd/yyyy',
            format: 'mm/dd/yyyy',
            onSet: function (context) {
                if (this.get().length > 0)
                $('#date2-title').text(this.get());
            },
            onStart: function ()
            {
                var date = new Date();
                date.setDate(date.getDate() - 1);
                this.set('select', date);
            }
        });

        $('#reportDate3').pickadate({
            formatSubmit: 'mm/dd/yyyy',
            format: 'mm/dd/yyyy',
            onSet: function (context) {
                if (this.get().length > 0)
                $('#date3-title').text(this.get());
            },
            onStart: function ()
            {
                var date = new Date();
                date.setDate(date.getDate() - 21);
                this.set('select', date);
            }
        });


        //initReportBuyersByHour();

        $('#download-btn').on('click', function () {
            loadReport(true);
        });

        $('#refresh-btn').on('click', function () {
            loadReport(false);
        });

        $('.multiselect').multiselect({
            enableCaseInsensitiveFiltering: true,
            numberDisplayed: 1
        });

        $('.select').select2();

        //initReportBuyersByCampaigns();
        $('#campaigns').on('change', function () {
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: '@Model.BaseUrl' + '/management/buyerchannel/GetBuyerChannelsByCampaign',
                data: { id: $(this).val(), mode: 1 },
                success: function (data) {
                    var $dropdown = $("#buyerChannels");
                    $dropdown.find('option').remove();
                    $('.multiselect').multiselect('destroy').multiselect({
                        enableCaseInsensitiveFiltering: true,
                        numberDisplayed: 1
                    });
                    $.each(data.data, function () {
                        $dropdown.append($("<option />").val(this[0]).text(this[1]));
                    });
                    $('.multiselect').multiselect('destroy').multiselect({
                        enableCaseInsensitiveFiltering: true,
                        numberDisplayed: 1
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        });

        $(".sortable-column").on("click",
        function (e) {
            e.preventDefault();

            var col = $(this).data("col");
            var order = $(this).data("order");

            console.log(col, order);

            sortTable(col, order);

            $(this).data("order", (order == "asc" ? "desc" : "asc"));
        });
    });
</script>
<br>
<div class="row">
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Campaign</label><br />
                    <select id="campaigns" class="form-control select">
                        <option value="0">Select campaign</option>
                        @foreach (var a in Model.ListCampaigns)
                        {
                            <option value="@a.Value">@a.Text</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-6 bulk-filter">
                <div class="form-group">
                    <label>Buyer channels</label><br />
                    <select id="buyerChannels" class="multiselect" multiple="multiple">
                        @foreach (var a in Model.ListBuyerChannels)
                        {
                            <option value="@a.Value">@a.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Date1</label><br />
                    <input type="text" id="reportDate1" class="form-control daterange-single" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Date2</label><br />
                    <input type="text" id="reportDate2" class="form-control daterange-single" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Date3</label><br />
                    <input type="text" id="reportDate3" class="form-control daterange-single" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button id="refresh-btn" class="btn btn-info">Refresh</button>
                <button id="download-btn" class="btn btn-default">Download CSV</button>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <br>
        <div class="table-responsive">
            <table id="ReportBuyersByHour" class="table table-bordered tree-table">
                <thead>
                    <tr>
                        <th></th>
                        <th colspan="2" id="date1-title"><b>Date1</b></th>
                        <th colspan="2" id="date2-title"><b>Date2</b></th>
                        <th colspan="2" id="date3-title"><b>Date3</b></th>
                    </tr>
                    <tr>
                        <th style="width: 80px;"><a href="#" data-col="0" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Hour</a></th>
                        <th style="width: 80px;"><a href="#" data-col="1" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Total leads</a></th>
                        <th style="width: 80px;"><a href="#" data-col="2" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Sold leads</a></th>

                        <th style="width: 80px;"><a href="#" data-col="3" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Total leads</a></th>
                        <th style="width: 80px;"><a href="#" data-col="4" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Sold leads</a></th>

                        <th style="width: 80px;"><a href="#" data-col="5" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Total leads</a></th>
                        <th style="width: 80px;"><a href="#" data-col="6" data-order="asc" data-report="ReportBuyersByHour" class="sortable-column">Sold leads</a></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <br />
            <br />
        </div>
    </div>
</div>