@model Adrack.Web.ContentManagement.Models.Lead.Reports.BuyerReportModel

@{
    Html.AddPageTitle("Conversion/default analytics settings");

    Html.AppendPageScript(PageLayoutPosition.Body, string.Format("~/Scripts/plugins/select2.min.js").ToLowerInvariant());
}

<script src="~/Scripts/core/library/jquery_ui/core.min.js"></script>
<script src="~/Scripts/core/library/jquery_ui/interactions.min.js"></script>
<script src="~/Scripts/core/library/jquery_ui/effects.min.js"></script>
<script src="~/Scripts/plugins/forms/selects/bootstrap_multiselect.js"></script>
<script src="~/Scripts/plugins/trees/fancytree_all.min.js"></script>
<script src="~/Scripts/plugins/trees/fancytree_childcounter.js"></script>

<script src="~/Scripts/plugins/ui/moment/moment.min.js"></script>
<script src="~/Scripts/plugins/pickers/daterangepicker.js"></script>
<script src="~/Scripts/plugins/pickers/anytime.min.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.date.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/picker.time.js"></script>
<script src="~/Scripts/plugins/pickers/pickadate/legacy.js"></script>

<script>

    function initReportBuyersConversionAnalysys() {
        $("#ReportBuyersConversionAnalysys").fancytree({
            extensions: ["table", "dnd"],
            checkbox: false,
            table: {
                indentation: 20,      // indent 20px per node level
                nodeColumnIdx: 0     // render the node title into the 2nd column
            },
            source: [],
            lazyLoad: function (event, data) {
                data.result = { url: "ajax-sub2.json" }
            },
            renderColumns: function (event, data) {
                var node = data.node,
                $tdList = $(node.tr).find(">td");

                $tdList.eq(0).css('text-align', 'left');

                if (!node.folder) {

                }

                $tdList.eq(1).addClass('text-center').text(node.data.SoldLeads);
                $tdList.eq(2).addClass('text-center').text(node.data.LoanedLeads);
                $tdList.eq(3).addClass('text-center').text(node.data.ConversionRate + '%');
                $tdList.eq(4).removeClass('defaulted-leads').addClass('text-center').addClass('defaulted-leads').text(node.data.DefaultedLeads);

                if (node.title == 'Total') {
                    for (var i = 0; i < $tdList.length; i++) {
                        $tdList.eq(i).html('<b>' + $tdList.eq(i).text() + '</b>');
                    }
                }
            },
            activate: function (event, data) {
            },
            select: function (event, data) {
            },
            dnd: {
                preventVoidMoves: true, // Prevent dropping nodes 'before self', etc.
                preventRecursiveMoves: true, // Prevent dropping nodes on own descendants
                autoExpandMS: 400,
                draggable: {
                    //zIndex: 1000,
                    // appendTo: "body",
                    // helper: "clone",
                    scroll: false,
                    revert: "invalid"
                },
                dragStart: function (node, data) {
                    if (data.originalEvent.shiftKey) {
                        console.log("dragStart with SHIFT");
                    }
                    // allow dragging `node`:
                    return true;
                },
                dragEnter: function (node, data) {
                    return true;
                },
                dragDrop: function (node, data) {
                    if (!data.otherNode) {
                        // It's a non-tree draggable
                        var title = $(data.draggable.element).text() + " (" + (count)++ + ")";
                        node.addNode({ title: title }, data.hitMode);
                        alert('dd');
                        return;
                    }
                    data.otherNode.moveTo(node, data.hitMode);
                    $(node.tr).data('folder', true);
                    console.log(node.tr);
                }
            }
        });
    }

    function loadTree(source) {
        var tree = $('#ReportBuyersConversionAnalysys').fancytree('getTree');
        tree.reload(source);
        if ($('#reportType').val() == '1')
        {
            $('.defaulted-csv').hide();
            $('.defaulted-leads').hide();
        }
    }

    $(document).ready(function () {

        initReportBuyersConversionAnalysys();
        $('.defaulted-csv').hide();
        $('.defaulted-leads').hide();

        $('#reportType').on('change', function () {
            if ($(this).val() == 2) {
                $('.defaulted-csv').show();
                $('.defaulted-leads').show();
            }
            else {
                $('.defaulted-csv').hide();
                $('.defaulted-leads').hide();
            }
        });

       $('#startDate').pickadate({
            formatSubmit: 'mm/dd/yyyy',
            format: 'mm/dd/yyyy',
            onSet: function (context) {
            },
            onStart: function ()
            {
                var date = new Date();
                date.setDate(date.getDate() - 1);
                this.set('select', date);
            }
        });

        $('#endDate').pickadate({
            formatSubmit: 'mm/dd/yyyy',
            format: 'mm/dd/yyyy',
            onSet: function (context) {
            },
            onStart: function ()
            {
                var date = new Date();
                this.set('select', date);
            }
        });

       $(".sortable-column").on("click",
            function (e) {
                e.preventDefault();

                var col = $(this).data("col");
                var order = $(this).data("order");

                var cmp = function (a, b) {
                    if (a.title == "Total" || b.title == "Total")
                        return 0;

                    var x = 0;
                    var y = 0;

                    if (col == "title") {
                        x = a.title;
                        y = b.title;
                    } else {
                        x = a.data[col];
                        y = b.data[col];

                        if (!isNaN(parseFloat(x)) && isFinite(x)) {
                            x = parseFloat(x);
                        }

                        if (!isNaN(parseFloat(y)) && isFinite(y)) {
                            y = parseFloat(y);
                        }

                        console.log(x, y);
                    }

                    if (order == "asc")
                        return x === y ? 0 : (x > y ? 1 : -1);
                    else if (order == "desc")
                        return x === y ? 0 : (x < y ? 1 : -1);
                };

                $("#" + $(this).data("report")).fancytree("getRootNode").sortChildren(cmp, false);

                $(this).data("order", (order == "asc" ? "desc" : "asc"));
            });

        var today = new Date().toISOString().split('T')[0];
        $("#startDate").val(today);
        $("#endDate").val(today);

        $('#analyzeBy').change(function () {
            var selectedText = $("#analyzeBy option:selected").html();
            $('#name-column').text(selectedText);
        });

        $('#filters-form').on('submit', function (e) {
            e.preventDefault();

            var csv = false;
            var data = [];

            var buyerChannels = $('#buyerChannels').val();
            var buyerChannelIds = '0';
            if (buyerChannels != undefined) {
                if (buyerChannels.length > 0)
                    buyerChannelIds += ',';
                for (var i = 0; i < buyerChannels.length; i++) {
                    buyerChannelIds += buyerChannels[i];
                    if (i < buyerChannels.length - 1)
                        buyerChannelIds += ',';
                }
            }

            var formData = new FormData($("#filters-form")[0]);
            formData.append('buyerChannelIds', buyerChannelIds);

            if (!csv) {
                ShowLoader();

                $.ajax({
                    contentType: false,
                    processData: false,
                    type: "POST",
                    url: '@Model.BaseUrl' + '/management/report/GetReportBuyersConversionAnalysys',
                    data: formData,
                    success: function (data) {
                        console.log(data);
                        HideLoader();
                        loadTree(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        HideLoader();
                    }
                });
            }
            else {
                location.href = '@Model.BaseUrl' + '/management/report/GetReportBuyersConversionAnalysys?buyerChannelIds=' + buyerChannelIds +
                    '&startDate=' + $('#startDate').val() + '&endDate=' + $('#endDate').val() + '&csv=true';
            }
        });

        $('.multiselect').multiselect({
            enableCaseInsensitiveFiltering: true,
            numberDisplayed: 1
        });

        $('.select').select2();

        //initReportBuyersByCampaigns();
        $('#buyers').on('change', function () {
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                url: '@Model.BaseUrl' + '/management/buyerchannel/GetBuyerChannels',
                data: { bid: $(this).val(), mode: 1 },
                success: function (data) {
                    var $dropdown = $("#buyerChannels");
                    $dropdown.find('option').remove();
                    $('.multiselect').multiselect('destroy').multiselect({
                        enableCaseInsensitiveFiltering: true,
                        numberDisplayed: 1
                    });
                    $.each(data.data, function () {
                        console.log(this);
                        $dropdown.append($("<option />").val(this[0]).text(this[1]));
                    });
                    $('.multiselect').multiselect('destroy').multiselect({
                        enableCaseInsensitiveFiltering: true,
                        numberDisplayed: 1
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        });
    });
</script>
<br>

<div class="row">
    @using (Html.BeginForm("GetReportBuyersConversionAnalysys", null, FormMethod.Post, new { id = "filters-form", @class = "form-validation", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-5">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Buyer</label><br />
                        <select id="buyers" name="buyers" class="form-control select">
                            @foreach (var a in Model.ListBuyers)
                            {
                                <option value="@a.Value">@a.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-12 bulk-filter">
                    <div class="form-group">
                        <label>Buyer channels</label><br />
                        <select id="buyerChannels" name="buyerChannels" class="multiselect" multiple="multiple">
                            @foreach (var a in Model.ListBuyerChannels)
                            {
                                <option value="@a.Value">@a.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Report type</label><br />
                        <select id="reportType" name="buyerChannels" class="form-control">
                            <option value="1">Converted/accepted</option>
                            <option value="2">Converted/defaulted</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Start</label><br />
                                <input type="text" id="startDate" name="startDate" class="form-control daterange-single" placeholder="Start date" min="1" value="1" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>End</label><br />
                                <input type="text" id="endDate" name="endDate"class=" form-control daterange-single" placeholder="End date" value="10" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Select CSV file (Loaned):</label><br />
                        <input type="file" class="form-control" name="file1" />
                    </div>
                </div>
                <div class="col-md-12 defaulted-csv">
                    <div class="form-group">
                        <label class="control-label">Select CSV file (Defaulted):</label><br />
                        <input type="file" class="form-control" name="file2" />
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <label class="control-label">Analyze by:</label><br />
                                                                        <select id="analyzeBy" name="analyzeBy" class="form-control">
                                                                            <option value="channel">Channel</option>
                                                                            <option value="state">State</option>
                                                                            <option value="payfrequency">Pay frequency</option>
                                                                            <option value="age">Age</option>
                                                                            <option value="dayoftheweek">Day of the week</option>
                                                                            <option value="rla">Requested loan amount</option>
                                                                            <option value="netmonthlyincome">Net monthly income</option>
                                                                            <option value="incometype">Income type</option>
                                                                            <option value="banktime">Bank time</option>
                                                                            <option value="emptime">Emp time</option>
                                                                            <option value="addresstime">Address time</option>
                                                                            <option value="housingtype">Housing type</option>
                                                                        </select>
                    </div>
                </div>
                <div class="col-md-12">
                    <button id="refresh-btn" class="btn btn-info">Refresh</button>
                    <button id="download-btn" class="btn btn-default">Download CSV</button>
                </div>
            </div>

        </div>
    }
    <div class="col-md-7">
        <div class="table-responsive">
            <br>
            <table id="ReportBuyersConversionAnalysys" class="table table-bordered tree-table">
                <thead>
                    <tr>
                        <th style="width: 80px;"><a href="#" data-col="title" data-order="asc" data-report="ReportBuyersConversionAnalysys" class="sortable-column" id="name-column">Channel</a></th>
                        <th style="width: 80px;"><a href="#" data-col="SoldLeads" data-order="asc" data-report="ReportBuyersConversionAnalysys" class="sortable-column">Sold leads</a></th>
                        <th style="width: 80px;"><a href="#" data-col="LoanedLeads" data-order="asc" data-report="ReportBuyersConversionAnalysys" class="sortable-column">Loaned leads</a></th>
                        <th style="width: 80px;"><a href="#" data-col="ConversionRate" data-order="asc" data-report="ReportBuyersConversionAnalysys" class="sortable-column">Conversion rate</a></th>
                        <th style="width: 80px;" class="defaulted-leads"><a href="#" data-col="DefaultedLeads" data-order="asc" data-report="ReportBuyersConversionAnalysys" class="sortable-column">Defaulted leads</a></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
            <br /><br />
        </div>
    </div>
</div>