@using Adrack.Core.Infrastructure
@using Adrack.Service.Security
@model RegistrationRequestModel

@{
    Layout = "~/Views/Shared/_Master.Page.Layout.cshtml";

    Html.AppendPageScript(PageLayoutPosition.Body, "~/Scripts/plugins/select2.min.js".ToLowerInvariant());
    Html.AppendPageScript(PageLayoutPosition.Body, "~/Scripts/plugins/tables/datatables/datatables.min.js".ToLowerInvariant());
    Html.AppendPageCustom(PageLayoutPosition.ContainerAttribute, "login-container");
    var permissionService = AppEngineContext.Current.Resolve<IPermissionService>();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-body login-form">
        <div class="text-center">
            <div class="icon-object border-slate-300 text-slate-300">
                <i class="icon-reading"></i>
            </div>
            <h5 class="content-group">Start registration</h5>
        </div>

        <div class="form-group has-feedback has-feedback-left">
            @Html.LabelFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name, new {@class = "form-control", tabindex = 1, placeholder = "Name", required = "required"})
        </div>

        <div class="form-group has-feedback has-feedback-left">
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email, new {@class = "form-control", tabindex = 1, placeholder = "Email", required = "required", type = "email"})
        </div>

        <div class="row">
            <div class="col-sm-6">
                @Html.Raw(Html.GenerateCaptcha())
            </div>
        </div>

        <div style="color: red">
            @Html.ValidationSummary()
        </div>

        <div class="form-group">
            <input class="btn btn-info" id="validation-next" value="Next" type="submit">
        </div>
    </div>
}